import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './ClassList.css';
function ClassList() {
  const [classes, setClasses] = useState([]);
  const [newClassName, setNewClassName] = useState('');
  const [editingClassId, setEditingClassId] = useState(null);
  const [editedClassName, setEditedClassName] = useState('');

  const fetchClasses = async () => {
    try {
      const response = await fetch('http://localhost:3001/classes');
      const fetchedClasses = await response.json();
      setClasses(fetchedClasses);
    } catch (error) {
      console.error('Error fetching classes:', error);
    }
  };

  const handleCreateClass = async () => {
    if (newClassName) {
      try {
        await fetch('http://localhost:3001/classes', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ name: newClassName }),
        });
        setNewClassName('');
        // Refresh the class list
        fetchClasses();
      } catch (error) {
        console.error('Error creating class:', error);
      }
    }
  };

  const handleEditClass = (classId) => {
    setEditingClassId(classId);
    const classToEdit = classes.find((classItem) => classItem.id === classId);
    setEditedClassName(classToEdit.name);
  };

  const handleSaveEdit = async (classId) => {
    try {
      await fetch(`http://localhost:3001/classes/${classId}?update=true`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name: editedClassName }),
      });
      setEditingClassId(null);
      // Refresh the class list
      fetchClasses();
    } catch (error) {
      console.error('Error editing class:', error);
    }
  };

  const handleDeleteClass = async (classId) => {
    try {
      await fetch(`http://localhost:3001/classes/${classId}`, {
        method: 'DELETE',
      });
      // Refresh the class list
      fetchClasses();
    } catch (error) {
      console.error('Error deleting class:', error);
    }
  };

  useEffect(() => {
    fetchClasses();
  }, []);

  
    return (
      <div className="ClassList">
        <h2>Classes:</h2>
        <form className="create-form"
          onSubmit={(e) => {
            e.preventDefault();
            handleCreateClass();
          }}
        >
          <input
            type="text"
            value={newClassName}
            onChange={(e) => setNewClassName(e.target.value)}
            placeholder="Enter class name"
            className="input-field"
          />
          <button type="submit" className="create-button">Create Class</button>
        </form>
  
        <ul className="class-list">
          {classes.map((classItem) => (
            <li key={classItem.id} className="class-item">
              {editingClassId === classItem.id ? (
                <>
                  <input
                    type="text"
                    value={editedClassName}
                    onChange={(e) => setEditedClassName(e.target.value)}
                    className="edit-input"
                  />
                  <button onClick={() => handleSaveEdit(classItem.id)} className="save-button">Save</button>
                  <button onClick={() => setEditingClassId(null)} className="cancel-button">Cancel</button>
                </>
              ) : (
                <>
                <div className="class-info">
                  <span className="class-name">{classItem.name}</span>
                  <div className="class-actions">
                  <button onClick={() => handleEditClass(classItem.id)} className="edit-button">Edit</button>
                  <button onClick={() => handleDeleteClass(classItem.id)} className="delete-button">Delete</button>
                  <Link to={`/view-students/${classItem.id}`} className="view-button">
                    View Students
                  </Link>
                 </div>
                 </div>
                </>
              )}
            </li>
          ))}
        </ul>
      </div>
    );
}

export default ClassList;
